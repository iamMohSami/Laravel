Here, we will learn =


1}What is URL Generation
Displaying the browser URL on our webpage

2}Get current URL and full URL 

we have 2 methods for each which will give same output - 

CURRENT URL -> 
method1 = <h3>{{URL::current()}}</h3>
method2 = <h3>{{url()->current()}}</h3>

FULL URL  ->
method1 = <h3>{{URL::full()}}</h3>
method2 = <h3>{{url()->full()}}</h3>

Difference bw these?
CURRENT URL only gives the URL upto '?' and doest not include the extra parameters passed
FULL URL gives the entire URL and also includes the extra parameters
i.e 
IF BROWSER URL => http://127.0.0.1:8000/home?name=Sami
then,
CURRENT URL OUTPUT => http://127.0.0.1:8000/home
FULL URL OUTPUT => http://127.0.0.1:8000/home?name=sami



3}Get the previous URL

gives the previous URL from where the current URL is reached

method1 = <h3>{{URL::previous()}}</h3>
method2 = <h3>{{url()->previous()}}</h3>

4}Make link URL

We have learned about ANCHOR TAGS i.e. 

we use anchor tags to jump from one page to other
this can also be done with the help of Routes

In our Starting welcome.blade.php page =>
<h1>Hello </h1>
<h3>Click below to go on other Pages</h3>
<a href="/home">Home</a>
<a href="/about/sami">About Sami</a>

THE SAME THING CAN BE IMPLEMENTED USING 
<a href="{{URL::to('home)}}">Home</a>

5}Make URL with child path

<a href="/about/sami">About Sami</a>

This can be IMPLEMENTED as=> 

Route::view('/about/{name}' , 'about') ; 

and 

<a href="{{URL::to('about' , ['sami'])}}">About Sami</a>





ADDITIONAL CHATGPT NOTES => 

### URL Generation in Laravel

URL generation in Laravel allows you to dynamically generate URLs to your application's routes. This can be useful for creating links, redirects, and more. Hereâ€™s a detailed look at URL generation, including how to get the current and previous URLs, and how to create URLs dynamically.

### 1. What is URL Generation?

URL generation refers to the process of creating URLs programmatically within your Laravel application. This can be particularly useful for creating dynamic links, especially when dealing with routes that have parameters.

### 2. Displaying the Browser URL on Your Webpage

#### Getting the Current URL

There are two methods to get the current URL:

```blade
<h3>{{ URL::current() }}</h3>
<h3>{{ url()->current() }}</h3>
```

#### Getting the Full URL

There are two methods to get the full URL:

```blade
<h3>{{ URL::full() }}</h3>
<h3>{{ url()->full() }}</h3>
```

**Difference between Current URL and Full URL:**

- **Current URL**: Provides the URL up to the `?` and does not include any query parameters.
- **Full URL**: Includes the entire URL along with any query parameters.

Example:
If the browser URL is `http://127.0.0.1:8000/home?name=Sami`:
- `{{ URL::current() }}` or `{{ url()->current() }}` will output `http://127.0.0.1:8000/home`.
- `{{ URL::full() }}` or `{{ url()->full() }}` will output `http://127.0.0.1:8000/home?name=Sami`.

### 3. Getting the Previous URL

To get the previous URL (the URL from which the current URL was reached), use:

```blade
<h3>{{ URL::previous() }}</h3>
<h3>{{ url()->previous() }}</h3>
```

### 4. Making Link URLs

You can create links using anchor tags. Typically, you would do something like this:

```blade
<a href="/home">Home</a>
<a href="/about/sami">About Sami</a>
```

However, you can also generate these links dynamically using Laravel's URL generation methods:

```blade
<a href="{{ URL::to('home') }}">Home</a>
<a href="{{ URL::to('about/sami') }}">About Sami</a>
```

### 5. Making URLs with Child Paths

For routes with parameters, you can generate URLs dynamically.

Define a route with a parameter in `web.php`:

```php
Route::view('/about/{name}', 'about');
```

Generate the URL dynamically:

```blade
<a href="{{ URL::to('about', ['sami']) }}">About Sami</a>
```

### Summary

- **URL Generation**: Essential for creating dynamic links and redirects.
- **Getting URLs**:
  - `URL::current()` or `url()->current()` for the current URL without query parameters.
  - `URL::full()` or `url()->full()` for the full URL including query parameters.
- **Previous URL**: Use `URL::previous()` or `url()->previous()` to get the referring URL.
- **Dynamic Links**: Create links using `URL::to()` with or without parameters.

### Additional Details

1. **Route URLs**:
   - You can generate URLs to named routes using `route('route.name')`.
   - Example:
     ```php
     Route::get('/user/{id}', [UserController::class, 'show'])->name('user.show');
     ```
     ```blade
     <a href="{{ route('user.show', ['id' => 1]) }}">User 1</a>
     ```

2. **Asset URLs**:
   - For generating URLs to your assets, use `asset()`.
   - Example:
     ```blade
     <img src="{{ asset('images/logo.png') }}" alt="Logo">
     ```

3. **Signed URLs**:
   - Laravel allows you to generate signed URLs that can be verified for authenticity.
   - Example:
     ```php
     use Illuminate\Support\Facades\URL;

     $url = URL::signedRoute('unsubscribe', ['user' => 1]);
     ```
     ```blade
     <a href="{{ $url }}">Unsubscribe</a>
     ```

By mastering URL generation, you can create robust and user-friendly navigation in your Laravel applications, making your routes dynamic and adaptable to various scenarios.