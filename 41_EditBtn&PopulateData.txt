similar to delete btn, now we will make a edit button beside it 
which when clicked, takes the user to a FORM which contains input fields to UPDATE/EDIT his data
NOW,
POPULATE DATA means => when the user comes to the update form, his PREVIOUS ENTERED values of data should be present in the form already so that he can easily UPDATE/CORRECT his data 

In our list-employee.blade.php , lets add an EDIT link => 

 <tr>
                <td>{{$emp->id}}</td>
                <td>{{$emp->name}}</td>
                <td>{{$emp->email}}</td>
                <td>{{$emp->phone}}</td>
                <td>{{$emp->created_at}}</td>
                <td>{{$emp->updated_at}}</td>
                <td><a href="{{ url('deleteemployee/'.$emp->id) }}">Delete</a></td>
                <td><a href="{{ url('editemployee/'.$emp->id) }}">Edit</a></td>
</tr>


In web.php => 
Route::get('/editemployee/{id}' , [EmployeeController::class , 'edit']) ; 


In EmployeeController.php => 
   function edit($id){
        // find function finds all the data of the emmployee with the passed ID
        $data = Employee::find($id) ; 
        return view('edit-employee' , ['empd'=>$data]) ; 
    }

Make a new view "edit-employee.blade.php" , in this file, create  a form for editing prev data and also populate with previous responses => 

<h1>UPDATE EMPLOYEE DETAILS</h1>
<form action="" method="post">
    @csrf 
    <input type="text" name="name" placeholder="Enter Name" value="{{$empd->name}} "> <br> <br>
    <input type="text" name="email" placeholder="Enter Email" value="{{$empd->email}} "> <br> <br>
    <input type="text" name="name" placeholder="Enter Phone Number" value="{{$empd->phone}} "> <br> <br>
    <button>Update</button>
    <a href="/listemployee">Cancel</a>
</form>


OUTPUT => http://127.0.0.1:8000/listemployee 

EMPLOYEE LIST
ID	Name	Email	Phone	Created At	Updated At	Operations
4	Mohammad Sami	choudharisami2004@gmail.com	6545	2024-07-03 07:10:29	2024-07-03 07:10:29	Delete	Edit
5	Dr. Rohan Oberoi	rohnan@test.com	123456	2024-07-04 05:00:27	2024-07-04 05:00:27	Delete	Edit
6	Shah Rukh Khan	kingkhan@mannat.com	55555	2024-07-05 04:37:58	2024-07-05 04:37:58	Delete	Edit


when i click on edit on ID 6 , 

UPDATE EMPLOYEE DETAILS
Shah Rukh Khan 

kingkhan@mannat.com 

55555 

Update Cancel




WHEN CLICKED "UPDATE", nothing happens for now, will Implement it in next lec
WHEN CLICKED "CANCEL" , it takes back to "list0employee" view without making any changes




ADDITIONAL CHATGPT NOTES => 


### Editing Employee Data and Populating the Form with Existing Data

#### Steps to Add an Edit Link and Populate the Form

**1. Add an Edit Link in the View**

Update the `list-employee.blade.php` file to include an edit link for each employee. This link will point to a route that handles the editing process:

```html
<div>
    <h1>EMPLOYEE LIST</h1>
    {{-- {{print_r($employeedata)}}  --}}
    <table border="1">
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Created At</th>
            <th>Updated At</th>
            <th>Operations</th>
        </tr>

        @foreach ($employeedata as $emp)
            <tr>
                <td>{{ $emp->id }}</td>
                <td>{{ $emp->name }}</td>
                <td>{{ $emp->email }}</td>
                <td>{{ $emp->phone }}</td>
                <td>{{ $emp->created_at }}</td>
                <td>{{ $emp->updated_at }}</td>
                <td><a href="{{ url('deleteemployee/'.$emp->id) }}">Delete</a></td>
                <td><a href="{{ url('editemployee/'.$emp->id) }}">Edit</a></td>
            </tr>
        @endforeach
    </table>
</div>
```

**2. Define the Route**

Add a route in `web.php` to handle the editing of an employee. This route will call the `edit` method in the `EmployeeController`:

```php
use App\Http\Controllers\EmployeeController;

// Route to handle editing employee data
Route::get('/editemployee/{id}', [EmployeeController::class, 'edit']);
```

**3. Implement the Edit Method in the Controller**

In `EmployeeController.php`, add a method to fetch the existing data of the employee and pass it to the view for editing:

```php
namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Employee;

class EmployeeController extends Controller
{
    public function list()
    {
        $alldata = Employee::all();
        return view('list-employee', ['employeedata' => $alldata]);
    }

    public function edit($id)
    {
        // Fetch employee data by ID
        $data = Employee::find($id);
        return view('edit-employee', ['empd' => $data]);
    }
}
```

**4. Create the Edit View**

Create a new view file `edit-employee.blade.php`. This file will contain a form pre-populated with the existing employee data:

```html
<h1>UPDATE EMPLOYEE DETAILS</h1>
<form action="" method="post">
    @csrf
    <input type="text" name="name" placeholder="Enter Name" value="{{ $empd->name }}"> <br> <br>
    <input type="text" name="email" placeholder="Enter Email" value="{{ $empd->email }}"> <br> <br>
    <input type="text" name="phone" placeholder="Enter Phone Number" value="{{ $empd->phone }}"> <br> <br>
    <button>Update</button>
    <a href="/listemployee">Cancel</a>
</form>
```

**5. Test the Editing Functionality**

Open your browser and navigate to `http://127.0.0.1:8000/listemployee` to see the list of employees with the edit links. Click on the "Edit" link next to an employee to open the form pre-populated with the existing data.

**Expected Output:**

Initial Table:

```
EMPLOYEE LIST
-----------------------------------------------------------
ID  | Name            | Email                       | Phone  | Created At           | Updated At           | Operations
-----------------------------------------------------------
4   | Mohammad Sami   | sami2004@gmail.com          | 6545   | 2024-07-03 07:10:29  | 2024-07-03 07:10:29  | Delete | Edit
5   | Dr. Rohan Oberoi| rohnan@test.com             | 123456 | 2024-07-04 05:00:27  | 2024-07-04 05:00:27  | Delete | Edit
6   | Shah Rukh Khan  | kingkhan@mannat.com         | 55555  | 2024-07-05 04:37:58  | 2024-07-05 04:37:58  | Delete | Edit
-----------------------------------------------------------
```

Clicking "Edit" for Employee with ID 6:

```
UPDATE EMPLOYEE DETAILS
-----------------------------------------------------------
Name: Shah Rukh Khan

Email: kingkhan@mannat.com

Phone: 55555

[Update] [Cancel]
-----------------------------------------------------------
```

### Summary

To edit an employee record and pre-populate the form with existing data in Laravel, follow these steps:

1. **Add an Edit Link in the View:** Modify the view file to include an edit link for each record.
2. **Define the Route:** Create a route that handles the editing request.
3. **Implement the Controller Logic:** Add a method in the controller to fetch existing data and pass it to the edit view.
4. **Create the Edit View:** Design a form in the edit view pre-populated with the existing data.
5. **Test the Functionality:** Verify the editing process by clicking the edit link and ensuring the form is populated with the correct data.

### Additional Details

- **Update Functionality:** In the next steps, you would need to handle the form submission to update the database with the new values.
- **Form Validation:** Add validation to the form to ensure the data entered is correct before updating the database.
- **User Experience:** Consider adding user feedback for successful updates or errors, and use AJAX for a smoother user experience without page reloads.